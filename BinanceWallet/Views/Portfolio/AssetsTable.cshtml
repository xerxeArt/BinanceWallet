@using BinanceWallet.ViewModels
@using BinanceWallet.Helpers
@model AssetTableViewModel

@{
    decimal eur, busd;
    busd = (decimal)ViewBag.busd;
    eur = (decimal)ViewBag.eur;

}

<table class="assets-table">
    <thead>
        <tr>
            <th colspan="4">Binance market info</th>
            <th colspan="4">Wallet info</th>
            <th colspan="3">Profit info</th>
        </tr>
        <tr>
            @* Market *@
            <th>Asset</th>
            <th>Current price</th>
            <th>EUR</th>
            <th>BUSD</th>
            @* Wallet *@
            <th>BPWA</th>
            <th>Held count</th>
            <th>Held amount</th>
            <th>Held EUR</th>
            @* Profit *@
            <th>%</th>
            <th>BTC</th>
            <th>EUR</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var asset in Model.Assets.OrderBy(x => x.ProfitPercent))
        {
            <tr class="@(asset.HoldingAmount >= 0.00500000m ? "important-asset" : "")">
                @* Market *@
                <td>
                    @(HelperMethods.GetTradeLink(asset.AssetName, asset.Market, null))
                </td>
                <td class="currency-cell">
                    @(HelperMethods.GetTradeLink(asset.AssetName, "BTC", HelperMethods.FormatCurrency(asset.CurrentPrice)))
                </td>
                <td class="currency-cell">
                    @(HelperMethods.GetTradeLink(asset.AssetName, "EUR", HelperMethods.FormatCurrency(asset.CurrentPriceConverted, 2)))
                </td>
                <td class="currency-cell">
                    @(HelperMethods.GetTradeLink(asset.AssetName, "BUSD", HelperMethods.FormatCurrency(asset.CurrentPriceConverted / eur * busd, 2)))
                </td>
                @* Wallet *@
                <td class="currency-cell">@(HelperMethods.FormatCurrency(asset.BuyPriceWeightedAvg))</td>
                <td class="currency-cell">@(HelperMethods.FormatCurrency(asset.HoldingCount))</td>
                <td class="currency-cell">@(HelperMethods.FormatCurrency(asset.HoldingAmount))</td>
                <td class="currency-cell">@(HelperMethods.FormatCurrency(asset.HoldingAmountConverted, 2))</td>
                @* Profit *@
<td style="color: @($"#{asset.RgbColor}")" class="percentage-cell">@HelperMethods.FormatPercentage(asset.ProfitPercent)</td>
                @{
                    string cellClass = "";
                    if (asset.ProfitValue >= 0.001m) cellClass = "alert-high-cell";
                    else if (asset.ProfitValue <= -0.001m) cellClass = "alert-low-cell";
                }
                <td class="currency-cell @(cellClass)">@(HelperMethods.FormatCurrency(asset.ProfitValue))</td>
                @{
                    if (asset.ProfitValueConverted >= 50m) cellClass = "alert-high-cell";
                    else if (asset.ProfitValueConverted <= -50m) cellClass = "alert-low-cell";
                }
                <td class="currency-cell @(cellClass)">@(HelperMethods.FormatCurrency(asset.ProfitValueConverted, 2))</td>
            </tr>
        }
    </tbody>
</table>